-- Write your query below and then click "Run Query" to execute it. To save multiple queries, click the "+" icon on the left.
/* Chapter 8 Activities  */
DROP DATABASE IF EXISTS InstantRide;
CREATE DATABASE InstantRide;
USE InstantRide;

CREATE TABLE CARS (
    CAR_ID CHAR(5) PRIMARY KEY NOT NULL,
    CAR_PLATE VARCHAR(10) NOT NULL,
    CAR_MODEL VARCHAR(20) NOT NULL,
    CAR_YEAR YEAR NOT NULL
);

CREATE TABLE DRIVERS (
    DRIVER_ID CHAR(5) PRIMARY KEY NOT NULL,
    DRIVER_FIRST_NAME VARCHAR(20) NOT NULL,
    DRIVER_LAST_NAME VARCHAR(20) NOT NULL,
    DRIVER_DRIVING_LICENSE_ID VARCHAR(10) NOT NULL,
    DRIVER_START_DATE DATE NOT NULL,
    DRIVER_DRIVING_LICENSE_CHECKED BOOL NOT NULL,
    DRIVER_RATING DECIMAL(2,1) NOT NULL
);


CREATE TABLE MAINTENANCE_TYPES (
    MAINTENANCE_TYPE_ID CHAR(5) PRIMARY KEY NOT NULL,
    MAINTENANCE_TYPE_DESCRIPTION VARCHAR(30) NOT NULL    
);

CREATE TABLE MAINTENANCES (
 CAR_ID CHAR(5),
 MAINTENANCE_TYPE_ID CHAR(5),
 MAINTENANCE_DUE DATE,
 PRIMARY KEY (CAR_ID, MAINTENANCE_TYPE_ID, MAINTENANCE_DUE),
 FOREIGN KEY (CAR_ID) REFERENCES CARS(CAR_ID), 
 FOREIGN KEY (MAINTENANCE_TYPE_ID) REFERENCES MAINTENANCE_TYPES(MAINTENANCE_TYPE_ID)
);

CREATE TABLE USERS (
    USER_ID CHAR(5) PRIMARY KEY NOT NULL,
    USER_FIRST_NAME VARCHAR(20) NOT NULL,
    USER_LAST_NAME VARCHAR(20) NOT NULL,
    USER_EMAIL VARCHAR(100) NOT NULL
);

CREATE TABLE TRAVELS (
    TRAVEL_ID CHAR(10) PRIMARY KEY NOT NULL,
    TRAVEL_START_TIME DATETIME NOT NULL,
    TRAVEL_END_TIME DATETIME NOT NULL,
    TRAVEL_START_LOCATION CHAR(30) NOT NULL,
    TRAVEL_END_LOCATION CHAR(30) NOT NULL,
    TRAVEL_PRICE DECIMAL(5 , 2 ) NOT NULL,
    DRIVER_ID CHAR(5) NOT NULL,
    CAR_ID CHAR(5) NOT NULL,
    USER_ID CHAR(5) NOT NULL,
    TRAVEL_DISCOUNT DECIMAL(3 , 2 )
);

CREATE TABLE ACTIVE_DRIVERS (
   DRIVER_ID CHAR(5) PRIMARY KEY,
   DRIVER_FIRST_NAME VARCHAR(20),
   DRIVER_LAST_NAME VARCHAR(20),
   DRIVER_DRIVING_LICENSE_ID VARCHAR(10),
   DRIVER_DRIVING_LICENSE_CHECKED BOOL,
   DRIVER_RATING DECIMAL(2,1) 
   );

   CREATE TABLE ACTIVE_DRIVERS (
    DRIVER_ID CHAR(5) PRIMARY KEY,
    DRIVER_FIRST_NAME VARCHAR(20),
    DRIVER_LAST_NAME VARCHAR(20),
    DRIVER_DRIVING_LICENSE_ID VARCHAR(10),
    DRIVER_DRIVING_LICENSE_CHECKED BOOLEAN,
    DRIVER_RATING DECIMAL(2,1)
);

-- DML (Data Manipulation Language) to populate ACTIVE_DRIVERS
-- This SELECTs distinct drivers from the DRIVERS table who also appear in the TRAVELS table
INSERT INTO ACTIVE_DRIVERS (
    DRIVER_ID,
    DRIVER_FIRST_NAME,
    DRIVER_LAST_NAME,
    DRIVER_DRIVING_LICENSE_ID,
    DRIVER_DRIVING_LICENSE_CHECKED,
    DRIVER_RATING
)
SELECT
    d.DRIVER_ID,
    d.DRIVER_FIRST_NAME,
    d.DRIVER_LAST_NAME,
    d.DRIVER_DRIVING_LICENSE_ID,
    d.DRIVER_DRIVING_LICENSE_CHECKED,
    d.DRIVER_RATING
FROM
    DRIVERS d
WHERE
    EXISTS (SELECT 1 FROM TRAVELS t WHERE t.DRIVER_ID = d.DRIVER_ID);
